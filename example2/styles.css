/* anything */
* {
	font-size: 20px;
}

/* by tag */
b {
	color: red;
}

/* by id */
#paragraph {
	text-decoration: underline;
}

/* by class */
.span {
	color: midnightblue;
}

.division {
	color: orangered;
	text-decoration: underline;
}

.div {
	text-decoration: line-through;
}

/* by descendant */
.parent .descendant {
	font-weight: bold;
}

/* by pseudo-class */
a:link {
	color: green;
}

a:visited {
	color: royalblue;
}

a:hover {
	color: red;
}

/* by neighbour/next one (first one) */
span + p {
	color: red;
	background: royalblue;
}

/* by parentship, parent > child (first after parent) */
.parent > .child {
	color: crimson;
	background: mediumpurple;
}

/* by neighbour/next one (all) */
.first ~ .second {
	color: green;
	font-weight: bold;
}

/* by attribute */
input[value="child"] {
	color: red;
}

input[value="parent"] {
	color: green;
}

input[value~="foka"] {
	color: blue;
}

/* negation (not) */
a:not(p) {
	text-decoration: line-through;
}

a:not(:first-child) {
	text-decoration: underline;
}

/* by pseudo-element */
.container {
	position: relative;
	color: red;
	background: blue;
	width: 200px;
	height: 200px;
}

.container::first-letter {
	color: greenyellow;
	font-weight: bold;
}

.container::first-line {
	color: rgb(157, 165, 42);
}

.container::after {
	content: "A";
	position: absolute;
	top: 0;
	left: 0;
}

.container::before {
	content: "B";
	position: absolute;
	bottom: 0;
	right: 0;
}

/* by nth child */
li:first-child {
	color: red;
}

li:nth-child(4) {
	color: green;
}

li:last-child {
	color: blue;
}

li:nth-child(2n) {
	color: purple;
}
